name: Build and Tests

on:  
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:  
  build:    
    runs-on: windows-2022
    
    steps:      
      - uses: actions/checkout@v4.1.1
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0
        
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1.2

      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Restore Packages
        run: nuget restore Jellyfin.UWP.sln

      - name: Build Solution
        run: |
          msbuild.exe Jellyfin.UWP.sln /p:configuration=$env:Configuration /p:Platform=x64 /p:AppxBundle=$env:AppxBundle /p:AppxBundlePlatforms="x64" -v:m
        env:
          AppxBundle: Always
          BuildMode: CI
          Configuration: Release
        
      - name: Run Tests
        run: vstest.console.exe /Platform:x64 .\tests\Jellyfin.UWP.Tests\bin\x64\Release\Jellyfin.UWP.Tests.build.appxrecipe

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"senbeiwabaka_Jellyfin.UWP_AYuW2VkcOTfeuyv7RdaP" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          msbuild.exe Jellyfin.UWP.sln /p:configuration="Release" /p:Platform=x64 /p:AppxBundle=$env:AppxBundle /p:AppxBundlePlatforms="x64"  -v:m
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: test
        if: GITHUB_BASE_REF == 'master'
        uses: actions/upload-artifact@v3.1.3
        with:
          name: Jellyfin UWP
          path: Jellyfin UWP\\AppPackages
