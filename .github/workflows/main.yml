name: Build and Tests

on:  
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  Configuration: "Release"
  Platform: "x64"
  ProjectName: Jellyfin.UWP

jobs:  
  build:    
    runs-on: windows-latest
    
    steps:      
      - uses: actions/checkout@v4.1.1
      
      - name: something
        run: |
          echo $env:Platform
          echo $env:Configuration
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0
        
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1.2

      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Restore packages
        run: nuget restore Jellyfin.UWP.sln -Verbosity quiet

      - name: Build solution
        shell: powershell
        run: |
          msbuild.exe Jellyfin.UWP.sln /p:configuration=$env:Configuration /p:Platform=$env:Platform /p:AppxBundle=$env:AppxBundle /p:AppxBundlePlatforms=$env:Platform -v:m
        env:
          AppxBundle: Always
          BuildMode: CI
        
      - name: Run tests
        shell: powershell
        run: vstest.console.exe /Platform:$env:Platform .\tests\Jellyfin.UWP.Tests\bin\x64\Release\Jellyfin.UWP.Tests.build.appxrecipe

      - name: Set up JDK 11
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'zulu'
          java-version: '11'
          
      - name: Cache SonarQube packages
        uses: actions/cache@v3.3.2
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3.3.2
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}  # Needed to get PR information, if any
          AppxBundle: Always
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"senbeiwabaka_Jellyfin.UWP_AYuW2VkcOTfeuyv7RdaP" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          msbuild.exe Jellyfin.UWP.sln /p:configuration=$env:Configuration /p:Platform=$env:Platform /p:AppxBundle=$env:AppxBundle /p:AppxBundlePlatforms=$env:Platform -v:q
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: windows-latest
    
    steps:      
      - name: Creates a release in GitHub and uploads attachments
        run: |
          gh release create v0.1.0 Jellyfin.UWP\\AppPackages\\*
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        shell: powershell
